<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo-d-g踩坑</title>
      <link href="/2021/11/18/Hexo-d-g%E8%B8%A9%E5%9D%91/"/>
      <url>/2021/11/18/Hexo-d-g%E8%B8%A9%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h2 id="解决github-clone失败的问题：-Failed-to-connect-to-github-com-port-443-Timed-out"><a href="#解决github-clone失败的问题：-Failed-to-connect-to-github-com-port-443-Timed-out" class="headerlink" title="解决github clone失败的问题： Failed to connect to github.com port 443: Timed out"></a>解决github clone失败的问题： Failed to connect to github.com port 443: Timed out</h2><h3 id="git-clone时遇到这个问题"><a href="#git-clone时遇到这个问题" class="headerlink" title="git clone时遇到这个问题"></a>git clone时遇到这个问题</h3><p><code>$ Failed to connect to github.com port 443: Timed out</code><br>可以使用这个命令解决：<br>☆取消全局代理<br><code>$ git config --global --unset http.proxy</code> </p><h3 id="git-add-时遇到这个问题"><a href="#git-add-时遇到这个问题" class="headerlink" title="git add 时遇到这个问题"></a>git add 时遇到这个问题</h3><p><code>warning: LF will be replaced by CRLF in demo/demo.py. The file will have its original line endings in your working directory</code><br>可以使用这个命令解决：git config –global core.autocrlf true</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo更新页面</title>
      <link href="/2021/11/18/Hexo%E6%9B%B4%E6%96%B0%E9%A1%B5%E9%9D%A2/"/>
      <url>/2021/11/18/Hexo%E6%9B%B4%E6%96%B0%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo更新页面使博客更新"><a href="#Hexo更新页面使博客更新" class="headerlink" title="Hexo更新页面使博客更新"></a>Hexo更新页面使博客更新</h2><h3 id="Clean"><a href="#Clean" class="headerlink" title="Clean"></a>Clean</h3><p><code>$ hexo clean</code><br>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h3 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h3><p><code>$ hexo d -g</code></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在GitHub上开源你的项目</title>
      <link href="/2021/11/18/hello-world/"/>
      <url>/2021/11/18/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="GitHub-提交上传"><a href="#GitHub-提交上传" class="headerlink" title="GitHub 提交上传"></a>GitHub 提交上传</h2><h3 id="在上传之前我们使用-Git-配置用户信息，运行以下命令"><a href="#在上传之前我们使用-Git-配置用户信息，运行以下命令" class="headerlink" title="在上传之前我们使用 Git 配置用户信息，运行以下命令"></a>在上传之前我们使用 Git 配置用户信息，运行以下命令</h3><p><code>$ git config --global user.name "名字" $ git config --global user.email "你的邮箱"</code></p><h3 id="之后我们进入到保存我们想要上传代码的文件中，执行初始化本地仓库命令"><a href="#之后我们进入到保存我们想要上传代码的文件中，执行初始化本地仓库命令" class="headerlink" title="之后我们进入到保存我们想要上传代码的文件中，执行初始化本地仓库命令"></a>之后我们进入到保存我们想要上传代码的文件中，执行初始化本地仓库命令</h3><p><code>$ git init</code></p><h3 id="之后将本地代码全部添加到暂存区"><a href="#之后将本地代码全部添加到暂存区" class="headerlink" title="之后将本地代码全部添加到暂存区"></a>之后将本地代码全部添加到暂存区</h3><p><code>$ git add .</code></p><h3 id="添加备注信息"><a href="#添加备注信息" class="headerlink" title="添加备注信息"></a>添加备注信息</h3><p><code>$ git commit -m "第一次提交"</code></p><h3 id="绑定远程仓库（仅第一次需要）"><a href="#绑定远程仓库（仅第一次需要）" class="headerlink" title="绑定远程仓库（仅第一次需要）"></a>绑定远程仓库（仅第一次需要）</h3><p><code>$ git remote add origin https://github.com/Jockkzy/Jockkzy.github.io.git</code></p><h3 id="选择-main-分支"><a href="#选择-main-分支" class="headerlink" title="选择 main 分支"></a>选择 main 分支</h3><p><code>$ git branch -M main</code></p><h3 id="提交代码到远程仓库"><a href="#提交代码到远程仓库" class="headerlink" title="提交代码到远程仓库"></a>提交代码到远程仓库</h3><p><code>$ git push -u origin main</code></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
